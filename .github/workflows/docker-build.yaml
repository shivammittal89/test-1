name: docker-build

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request_target:
    branches: ["main"]

env:
  IMAGE_NAME: docker/scout-demo-service
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
  DOCKERFILE_PATH: Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.SHA }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log into registry
        uses: docker/login-action@v2.1.0
        with:
          username: shivammittal005
          password: ${{ secrets.MIT_SHIV_DOCKER }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
            com.docker.image.source.entrypoint=${{ env.DOCKERFILE_PATH }}

      - name: Build and push Docker image on push
        id: build-and-push
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          load: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: "linux/amd64,linux/arm64"
          sbom: false
          provenance: false
      
      - name: Build and push Docker image on PR
        id: build-and-push-pr
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          load: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #platforms: "linux/amd64,linux/arm64"
          sbom: false
          provenance: false          

#      - name: Compare to deployed image
#        id: docker-scout-cves
#        if: ${{ github.event_name != 'pull_request_target' }}
#        uses: docker/scout-action@3227670e8a301f01dc387d9e007f37b9e784efab
#        with:
#          command: cves
#          image: ${{ steps.meta.outputs.tags }}
#          only-severities: critical,high
#          summary: true

      - name: Compare to deployed image
        id: docker-scout-compare
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: docker/scout-action@3227670e8a301f01dc387d9e007f37b9e784efab
        with:
          command: compare
          image: ${{ steps.meta.outputs.tags }}
          only-severities: critical,high
          to-stream: prod
          exit-code: true
          summary: true
          
      - name: Docker Scout
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@dd36f5b0295baffa006aa6623371f226cc03e506
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:edge
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment

